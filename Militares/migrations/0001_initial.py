# Generated by Django 5.0.4 on 2024-04-27 03:36

import datetime
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MilitarUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text='150 characters or fewer. Letters (uppercase and lowercase), digits, @, :, -, and _ only.', max_length=150, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_username', message='Enter a valid username. This value may contain only letters (uppercase and lowercase), numbers, @, :, -, and _ characters.', regex='^[a-zA-Z0-9@_:.,-]+$')], verbose_name='usuário')),
                ('patente', models.CharField(choices=[('', 'Selecione a Patente'), ('Soldado', 'Soldado'), ('Soldado Estrela', 'Soldado Estrela'), ('Cabo', 'Cabo'), ('Aluno', 'Aluno'), ('Terceiro Sargento', 'Terceiro Sargento'), ('Segundo Sargento', 'Segundo Sargento'), ('Primeiro Sargento', 'Primeiro Sargento'), ('Subtenente', 'Subtenente'), ('Cadete', 'Cadete'), ('Aspirante-a-Oficial', 'Aspirante-a-Oficial'), ('Segundo Tenente', 'Segundo Tenente'), ('Primeiro Tenente', 'Primeiro Tenente'), ('Capitão', 'Capitão'), ('Major', 'Major'), ('Tenente-Coronel', 'Tenente-Coronel'), ('Coronel ★', 'Coronel ★'), ('General-de-Brigada ★★', 'General-de-Brigada ★★'), ('General-de-Divisão ★★★', 'General-de-Divisão ★★★'), ('General-de-Exército ★★★★', 'General-de-Exército ★★★★'), ('Marechal ★★★★★', 'Marechal ★★★★★')], default='Soldado', max_length=50)),
                ('siglas', models.CharField(blank=True, choices=[('T1', 'T1'), ('T2', 'T2'), ('Tc1', 'Tc1'), ('Tc2', 'Tc2'), ('TP', 'TP')], max_length=50)),
                ('status', models.CharField(choices=[('Ativo', 'Ativo'), ('Demitido', 'Demitido'), ('Aposentado', 'Aposentado'), ('Exilado', 'Exilado')], default='Ativo', max_length=50)),
                ('demissao_motivo', models.CharField(blank=True, choices=[('Traição', 'Traição'), ('Auto-Demissão', 'Auto-Demissão'), ('Demissão', 'Demissão')], max_length=50)),
                ('responsavel_promocao', models.TextField(max_length=50, verbose_name='Responsável')),
                ('data', models.DateField(default=datetime.date.today)),
                ('ultimo_acesso', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
